name: tests

variables:
  - group: unittest-samples
  - name: self_location
    value: "self_location"
  - name: full_self_location
    value: "$(Agent.BuildDirectory)/$(self_location)"
  - name: samples_location
    value: "samples_location"
  - name: full_samples_location
    value: "$(Agent.BuildDirectory)/$(samples_location)"

resources:
  repositories:
  - repository: unittest-samples
    type: github
    name: $(unittest_samples_repository)
    ref: main
    endpoint: github-repo-sa
    trigger: none

trigger: ["*"]
pr: ["*"]

pool:
  vmImage: "ubuntu-20.04"

jobs:
  - job: run_test
    strategy:
      matrix:
        Python3_9:
          python.version: "3.9"
        #Python3_10:
        #  python.version: "3.10"
        #Python3_11:
        #  python.version: "3.11"

    timeoutInMinutes: 10

    steps:
      - task: UsePythonVersion@0
        displayName: Set python version
        inputs:
          versionSpec: "$(python.version)"
      - checkout: self
        fetchDepth: 1
        path: $(self_location)
      - checkout: unittest-samples
        fetchDepth: 1
        path: $(samples_location)
      - script: |
          [ ! -d "$(pwd)/tests" ] && echo "No tests found" && exit
          sudo apt-get update
          sudo apt-get install -y libfuzzy-dev libfuzzy2
          if [[ -f "$(pwd)/pkglist.txt" ]]; then
            grep -vE '^#' "$(pwd)/pkglist.txt" | xargs sudo apt install -y
          fi

          # Install Tesseract from source
          sudo wget https://github.com/tesseract-ocr/tesseract/archive/refs/tags/${TESSERACT_VERSION}.tar.gz
          sudo tar -xvf ${TESSERACT_VERSION}.tar.gz
          cd tesseract-${TESSERACT_VERSION}
          sudo ./autogen.sh && ./configure --disable-dependency-tracking && make && make install && ldconfig
          sudo wget https://raw.githubusercontent.com/tesseract-ocr/tessdata/main/eng.traineddata -O /usr/local/share/tessdata/eng.traineddata

          # Install Steganalysis library from source
          sudo mkdir -p /opt/al_service/
          sudo wget https://github.com/RickdeJager/stegseek/releases/download/v0.6/stegseek_0.6-1.deb
          sudo apt-get install -y ./stegseek_0.6-1.deb && rm -f ./stegseek_0.6-1.deb  && rm -rf /var/lib/apt/lists/*
          sudo wget https://github.com/brannondorsey/naive-hashcat/releases/download/data/rockyou.txt -O /opt/al_service/rockyou.txt

          sudo rm -rf /var/lib/apt/lists/*

          sudo env "PATH=$PATH" python -m pip install -U --no-cache-dir assemblyline assemblyline_v4_service
          [ -f $(pwd)/requirements.txt ] && sudo env "PATH=$PATH" python -m pip install -U --no-cache-dir -r $(pwd)/requirements.txt
          [ -f $(pwd)/tests/requirements.txt ] && sudo env "PATH=$PATH" python -m pip install -U --no-cache-dir -r $(pwd)/tests/requirements.txt
          sudo rm -rf /tmp/* /var/lib/apt/lists/* ~/.cache/pip
        workingDirectory: $(full_self_location)
        displayName: Setup environment
      - script: |
          [ ! -d "$(pwd)/tests" ] && echo "No tests found" && exit
          export REPO_NAME=${BUILD_REPOSITORY_NAME##*/}
          python -m pytest -p no:cacheprovider --durations=10 -rsx -vv --disable-warnings
        workingDirectory: $(full_self_location)
        displayName: Test
